plugins {
    id 'java'
    id("org.jetbrains.kotlin.jvm") version "1.9.0"
    id("org.jetbrains.kotlin.plugin.serialization") version "1.9.0"
}

group 'nion.network'
version '0.1'

configurations.implementation.setCanBeResolved(true)

repositories {
    mavenCentral()
}

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter-api:5.8.1')
    testImplementation('org.junit.jupiter:junit-jupiter-engine:5.8.1')

    implementation('org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.9.0')
    implementation('org.jetbrains.kotlinx:kotlinx-serialization-protobuf:1.3.0')
    implementation('org.jetbrains.kotlinx:kotlinx-serialization-json:1.3.0')
    implementation("com.influxdb:influxdb-client-kotlin:4.0.0")
    implementation('org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.2-native-mt')
    implementation("io.javalin:javalin:5.6.1")
    implementation("org.slf4j:slf4j-simple:2.0.7")
}

tasks.withType(Test).configureEach {
    it.scanForTestClasses = false
    it.useJUnitPlatform()
}

tasks.jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    setArchivesBaseName("Nion-Network")
    manifest {
        attributes.put("Main-Class", "LaunchKt")
    }
    from {
        configurations.implementation.collect { it.isDirectory() ? it : zipTree(it) }
    }
}